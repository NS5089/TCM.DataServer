using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Globalization;
using System.Timers;
using TCM_DataModel;
using System.Linq;
using Newtonsoft.Json;

namespace TCM.DataServer
{
    public class CampaignSession
    {
        private static readonly Logger.Logger log = new Logger.Logger(typeof(CampaignSession));

        public string Status; //will hold the item    
        private static ConcurrentDictionary<string, CampaignSession> campaignList = new ConcurrentDictionary<string, CampaignSession>();//will be used to remove the item once it is expired

        public CampaignSession(string _status)
        {
            Status = _status;             
        }

        public static CampaignSession Get(string campId)
        {
            CampaignSession campSession = null;
            campaignList.TryGetValue(campId, out campSession);
            if (campSession != null)
            {
                return campSession;
            }
            return null;
        }

        public static List<CampaignSession> GetAll()
        {
            return campaignList.Values.ToList();
        }



        public static bool AddOrUpdate(string campId, string status)
        {
            var newValue = new CampaignSession(status);
            campaignList.AddOrUpdate(campId, newValue, (key, oldValue) => newValue);           
            return true;
        }        
    }  
}
